{"version":3,"sources":["components/MediaDevices/MediaDevices.js","components/MediaDevices/index.js","components/PeerConnection/PeerConnection.js","components/PeerConnection/index.js","App.js","serviceWorker.js","index.js"],"names":["MediaDevices","props","mediaStream","videoRef","useRef","mediaConstraint","video","onGetUserMedia","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","wrap","_context","prev","next","navigator","mediaDevices","getUserMedia","sent","current","srcObject","t0","alert","stop","apply","this","arguments","onGetDisplayMedia","_ref2","_callee2","_context2","getDisplayMedia","onStop","_ref3","_callee3","_context3","getTracks","forEach","track","e","react_default","createElement","className","ref","width","height","autoPlay","onClick","PeerConnection","aStream","bStream","peerA","peerB","peerARemoteVideoRef","peerALocalVideoRef","peerBRemoteVideoRef","peerBLocalVideoRef","onStartCall","_callee5","offer","answer","_context5","RTCPeerConnection","ontrack","event","abrupt","streams","_x","_x2","onicecandidate","_ref4","evt","candidate","addIceCandidate","_x3","_ref5","_callee4","_context4","_x4","addTrack","createOffer","console","log","concat","JSON","stringify","setLocalDescription","setRemoteDescription","localDescription","createAnswer","App","components_MediaDevices","components_PeerConnection","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.4711043b.chunk.js","sourcesContent":["import React, { useRef } from \"react\";\nimport \"./MediaDevices.css\";\n\nfunction MediaDevices(props) {\n    const videoRef = useRef(null);\n\n    const mediaConstraint = {\n        video: true\n    };\n    let mediaStream;\n\n    const onGetUserMedia = async () => {\n        try {\n            mediaStream = await navigator.mediaDevices.getUserMedia(mediaConstraint);\n            videoRef.current.srcObject = mediaStream;\n        } catch (e) {\n            alert('Unable to capture video: ' + e);\n        }\n    }\n    \n    const onGetDisplayMedia = async () => {\n        try {\n            mediaStream = await navigator.mediaDevices.getDisplayMedia(mediaConstraint);\n            videoRef.current.srcObject = mediaStream;\n        } catch (e) {\n            alert('Unable to capture display: ' + e);\n        }\n    }\n\n    const onStop = async () => {\n        try {\n            if (mediaStream) {\n                mediaStream.getTracks().forEach(track => track.stop());\n            }\n        } catch (e) {\n            alert('Unable to stop media stream: '+ e);\n        }\n    }\n\n    return <div className=\"MediaDevices\">\n        <h1>Media Devices Example!</h1>\n        <video ref={videoRef} width=\"640\" height=\"320\" autoPlay className=\"Video\"></video>\n        <button onClick={onGetUserMedia}>getUserMedia</button>\n        <button onClick={onGetDisplayMedia}>getDisplayMedia</button>\n        <button onClick={onStop}>Stop</button>\n    </div>;\n}\n\nexport default MediaDevices;","import MediaDevices from \"./MediaDevices\";\n\nexport default MediaDevices;\n","import React, { useRef } from \"react\";\nimport \"./PeerConnection.css\";\n\nfunction PeerConnection(props) {\n    const peerARemoteVideoRef = useRef(null);\n    const peerALocalVideoRef = useRef(null);\n    const peerBRemoteVideoRef = useRef(null);\n    const peerBLocalVideoRef = useRef(null);\n\n    let aStream;\n    let bStream;\n    let peerA;\n    let peerB;\n\n    const onStartCall = async () => {\n        try {\n            aStream = await navigator.mediaDevices.getDisplayMedia({ video: true });\n            peerALocalVideoRef.current.srcObject = aStream;\n            bStream = await navigator.mediaDevices.getUserMedia({ video: true });\n            peerBLocalVideoRef.current.srcObject = bStream;\n\n            // Normally it would be created with an RTCConfiguration as parameter\n            // https://developer.mozilla.org/en-US/docs/Web/API/PeerConnection/PeerConnection\n            peerA = new RTCPeerConnection();\n            peerB = new RTCPeerConnection();\n\n            peerA.ontrack = async (event) => {\n                if (peerARemoteVideoRef.current.srcObject) return;\n                peerARemoteVideoRef.current.srcObject = event.streams[0]; \n            }\n            peerB.ontrack = async (event) => {\n                if (peerBRemoteVideoRef.current.srcObject) return;\n                peerBRemoteVideoRef.current.srcObject = event.streams[0]; \n            }\n            peerA.onicecandidate = async (evt) => {\n                try {\n                    if (evt.candidate === null) return;\n                    await peerB.addIceCandidate(evt.candidate);\n                } catch (e) {\n                    alert('Failed to add candidates to peerB: ' + e);\n                }\n            };\n            peerB.onicecandidate = async (evt) => {\n                try {\n                    if (evt.candidate === null) return;\n                    await peerA.addIceCandidate(evt.candidate);\n                } catch (e) {\n                    alert('Failed to add candidates to peerA: ' + e);\n                }\n            };\n\n            // Add the video tracks to the Peer\n            aStream.getTracks().forEach(track => peerA.addTrack(track, aStream));\n\n            // Create an Offer and send to Peer B\n            const offer = await peerA.createOffer();\n            console.log(`Offer: ${JSON.stringify(offer)}`);\n            await peerA.setLocalDescription(offer);\n\n            // Create an Answer and send to Peer A\n            await peerB.setRemoteDescription(peerA.localDescription);\n            bStream.getTracks().forEach(track => peerB.addTrack(track, bStream));\n            const answer = await peerB.createAnswer();\n            console.log(`Answer: ${JSON.stringify(answer)}`);\n            await peerB.setLocalDescription(answer);\n\n            // Peer A receiving the Peer B description\n            await peerA.setRemoteDescription(peerB.localDescription);\n        } catch (e) {\n            alert(`Call error ${e}`);\n        }\n    };\n\n    return <div className=\"PeerConnection\">\n        <h1>PeerConnection Example!</h1>\n        <div className=\"Videos\">\n            <div className=\"PeerA\">\n                <h2>Peer A</h2>\n                <video ref={peerARemoteVideoRef} width=\"320\" height=\"160\" className=\"Video\" autoPlay></video>\n                <video ref={peerALocalVideoRef} width=\"160\" height=\"80\" className=\"Video\" autoPlay></video>\n            </div>\n\n            <div className=\"PeerB\">\n                <h2>Peer B</h2>\n                <video ref={peerBRemoteVideoRef} width=\"320\" height=\"160\" className=\"Video\" autoPlay></video>\n                <video ref={peerBLocalVideoRef} width=\"160\" height=\"80\" className=\"Video\" autoPlay></video>\n            </div>\n        </div>\n        <button onClick={onStartCall}>Call</button>\n    </div>;\n}\n\nexport default PeerConnection;\n","import PeerConnection from \"./PeerConnection\";\n\nexport default PeerConnection;\n","import React from 'react';\nimport './App.css';\n\nimport MediaDevices from \"./components/MediaDevices\";\nimport PeerConnection from \"./components/PeerConnection\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <MediaDevices></MediaDevices>\n      <PeerConnection></PeerConnection>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}